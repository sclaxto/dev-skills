"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _dvaNoRouter = require("dva-no-router");

var _classnames = _interopRequireDefault(require("classnames"));

var _icon_Dropdown = _interopRequireDefault(require("../../assets/icon_Dropdown.svg"));

var _topbar_back = _interopRequireDefault(require("../../assets/topbar_back.svg"));

require("./index.less");

var _dec, _class, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TitleBar = (_dec = (0, _dvaNoRouter.connect)(function (_ref) {
  var user = _ref.user,
      loading = _ref.loading,
      global = _ref.global;
  return _objectSpread({}, user, {
    isMultiOrg: global.isMultiOrg,
    showComp: global.showComp,
    setSpecialBg: global.setSpecialBg,
    showBackBtn: global.showBackBtn,
    customName: global.customName,
    onBack: global.onBack,
    backUrl: global.backUrl,
    renderTitleBar: global.renderTitleBar,
    replaceUserName: global.replaceUserName,
    showCompChange: global.showCompChange,
    loading: loading.effects['user/fetchInitUserInfo']
  });
}), _dec(_class = (_temp =
/*#__PURE__*/
function (_Component) {
  _inherits(TitleBar, _Component);

  function TitleBar() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, TitleBar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TitleBar)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleBack", function () {
      var _this$props = _this.props,
          onBack = _this$props.onBack,
          backUrl = _this$props.backUrl;
      var _window = window,
          history = _window.history;

      if (typeof onBack === 'function') {
        onBack();
        return;
      }

      if (!backUrl) {
        history.back();
      } else {
        window.location.href = backUrl;
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleChange", function () {
      var _this$props2 = _this.props,
          dispatch = _this$props2.dispatch,
          userList = _this$props2.userList,
          showComp = _this$props2.showComp,
          showCompChange = _this$props2.showCompChange;
      if (!showCompChange) return;

      if (userList && userList.length >= 1) {
        dispatch({
          type: 'global/showCompChange',
          params: {
            status: !showComp
          }
        });
        return;
      }

      dispatch({
        type: 'user/fetchUserListData',
        params: {} // params: {
        //   userFilterType,
        //   isMultiOrg,
        //   launchSource: sourceParam,
        // },

      }).then(function () {
        dispatch({
          type: 'global/showCompChange',
          params: {
            status: !showComp
          }
        });
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderName", function () {
      var _this$props3 = _this.props,
          isMultiOrg = _this$props3.isMultiOrg,
          currentUserInfo = _this$props3.currentUserInfo,
          _this$props3$loading = _this$props3.loading,
          loading = _this$props3$loading === void 0 ? false : _this$props3$loading,
          customName = _this$props3.customName;

      if (loading !== false) {
        return null;
      }

      var _ref2 = currentUserInfo || {
        userName: '',
        orgName: ''
      },
          _ref2$userName = _ref2.userName,
          thisUserName = _ref2$userName === void 0 ? '' : _ref2$userName,
          _ref2$orgName = _ref2.orgName,
          orgName = _ref2$orgName === void 0 ? '' : _ref2$orgName; // const userName = replaceUserName ? null : thisUserName;
      // const name = !userList || !userList.length ? '暂无身份' : userName || '请选择';


      var name = thisUserName || '暂无身份';

      if (isMultiOrg === 1 && name) {
        return _react.default.createElement("div", {
          className: "ellipsis"
        }, customName || _react.default.createElement(_react.default.Fragment, null, name, _react.default.createElement("span", null, "-".concat(orgName))));
      }

      return _react.default.createElement("div", {
        className: "ellipsis"
      }, customName || name);
    });

    return _this;
  }

  _createClass(TitleBar, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          isMultiOrg = _this$props4.isMultiOrg,
          showComp = _this$props4.showComp,
          showBackBtn = _this$props4.showBackBtn,
          customName = _this$props4.customName,
          renderTitleBar = _this$props4.renderTitleBar,
          currentUserInfo = _this$props4.currentUserInfo;
      var arrowCls = (0, _classnames.default)(['down-icon', showComp && 'up']);
      var cls = (0, _classnames.default)(['ss-component-user-switching-title-bar', showComp && 'show']);

      if (renderTitleBar) {
        return renderTitleBar({
          cls: cls,
          showComp: showComp,
          currentUserInfo: currentUserInfo,
          isMultiOrg: isMultiOrg,
          onChange: this.handleBack
        });
      }

      return _react.default.createElement("div", {
        className: cls
      }, _react.default.createElement("div", {
        className: "left",
        onClick: showBackBtn ? this.handleBack : null
      }, showBackBtn && _react.default.createElement("img", {
        className: "back-icon",
        src: _topbar_back.default,
        alt: "back"
      })), _react.default.createElement("div", {
        className: "user-info",
        onClick: this.handleChange
      }, this.renderName(), !customName && _react.default.createElement("div", {
        className: "arrow"
      }, _react.default.createElement("img", {
        className: arrowCls,
        src: _icon_Dropdown.default,
        alt: "caretDown"
      }))), _react.default.createElement("div", {
        className: "right"
      }));
    }
  }]);

  return TitleBar;
}(_react.Component), _temp)) || _class);
var _default = TitleBar;
exports.default = _default;