"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.queryHeaderDetail = queryHeaderDetail;
exports.queryHeaderThrowError = queryHeaderThrowError;
exports.queryBodyDetail = queryBodyDetail;
exports.submitBody = submitBody;

var _qs = require("qs");

var _request = _interopRequireDefault(require("../utils/request"));

var _serviceUtils = require("./service-utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function queryHeaderDetail(_x) {
  return _queryHeaderDetail.apply(this, arguments);
}

function _queryHeaderDetail() {
  _queryHeaderDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(params) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", (0, _request.default)("".concat(_serviceUtils.url.demo, "/example/getHeaderDetail?").concat((0, _qs.stringify)(params))));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _queryHeaderDetail.apply(this, arguments);
}

function queryHeaderThrowError(_x2) {
  return _queryHeaderThrowError.apply(this, arguments);
}

function _queryHeaderThrowError() {
  _queryHeaderThrowError = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(params) {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", (0, _request.default)("".concat(_serviceUtils.url.demo, "/example/getHeaderThrowError?").concat((0, _qs.stringify)(params))));

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _queryHeaderThrowError.apply(this, arguments);
}

function queryBodyDetail(_x3) {
  return _queryBodyDetail.apply(this, arguments);
}

function _queryBodyDetail() {
  _queryBodyDetail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", (0, _request.default)("".concat(_serviceUtils.url.demo, "/example/getBodyDetail?").concat((0, _qs.stringify)(params))));

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _queryBodyDetail.apply(this, arguments);
}

function submitBody(_x4) {
  return _submitBody.apply(this, arguments);
}

function _submitBody() {
  _submitBody = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(params) {
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            return _context4.abrupt("return", (0, _request.default)("".concat(_serviceUtils.url.demo, "/example/submitBody"), {
              method: 'POST',
              data: params
            }));

          case 1:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _submitBody.apply(this, arguments);
}