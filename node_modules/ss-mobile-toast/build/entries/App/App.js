"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _dvaNoRouter = require("dva-no-router");

require("./App.less");

var _loading = _interopRequireDefault(require("../../assets/image/loading.svg"));

var _success = _interopRequireDefault(require("../../assets/image/success.svg"));

var _excluded = ["global"];

var _dec, _class;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var App = (_dec = (0, _dvaNoRouter.connect)(function (_ref) {
  var global = _ref.global,
      rest = _objectWithoutProperties(_ref, _excluded);

  return {
    className: global.className,
    rest: rest
  };
}), _dec(_class = /*#__PURE__*/function (_Component) {
  _inherits(App, _Component);

  var _super = _createSuper(App);

  function App() {
    _classCallCheck(this, App);

    return _super.apply(this, arguments);
  }

  _createClass(App, null, [{
    key: "renderLoading",
    value: function renderLoading(content) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "loading-container"
      }, /*#__PURE__*/_react.default.createElement("img", {
        src: _loading.default,
        alt: "loadingIcon"
      }), /*#__PURE__*/_react.default.createElement("p", null, content));
    }
  }, {
    key: "renderSuccess",
    value: function renderSuccess(content) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "success-container"
      }, /*#__PURE__*/_react.default.createElement("img", {
        src: _success.default,
        alt: "successIcon"
      }), /*#__PURE__*/_react.default.createElement("p", null, content));
    }
  }, {
    key: "renderInfo",
    value: function renderInfo(content) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "err-container"
      }, /*#__PURE__*/_react.default.createElement("p", null, content));
    }
  }, {
    key: "renderRemindModal",
    value: function renderRemindModal(options) {
      var _this = this;

      var _options$content = options.content,
          content = _options$content === void 0 ? '' : _options$content,
          _options$okText = options.okText,
          okText = _options$okText === void 0 ? '确定' : _options$okText,
          _options$cancelText = options.cancelText,
          cancelText = _options$cancelText === void 0 ? '' : _options$cancelText,
          _options$onOk = options.onOk,
          onOk = _options$onOk === void 0 ? null : _options$onOk,
          _options$onCancel = options.onCancel,
          onCancel = _options$onCancel === void 0 ? null : _options$onCancel;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "remind-container"
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: "content-container"
      }, /*#__PURE__*/_react.default.createElement("p", null, content)), /*#__PURE__*/_react.default.createElement("div", {
        className: "foot-container"
      }, !!cancelText && /*#__PURE__*/_react.default.createElement("p", {
        className: "cancel-btn",
        onClick: function onClick() {
          _this.hide();

          if (typeof onCancel === 'function') {
            onCancel();
          }
        }
      }, cancelText), /*#__PURE__*/_react.default.createElement("p", {
        className: "ok-btn",
        onClick: function onClick() {
          _this.hide();

          if (typeof onOk === 'function') {
            onOk();
          }
        }
      }, okText)));
    }
  }, {
    key: "hide",
    value: function hide() {
      var ele = document.getElementsByClassName('ss-component-toast')[0];

      if (ele && ele.parentNode) {
        ele.parentNode.removeChild(ele);
      }
    }
  }, {
    key: "createWrapEle",
    value: function createWrapEle() {
      var wrapEle = document.getElementsByClassName('ss-component-toast')[0];

      if (wrapEle) {
        return null;
      }

      wrapEle = document.createElement('div');
      wrapEle.className = 'ss-component-toast';
      document.body.appendChild(wrapEle);
      return wrapEle;
    }
  }, {
    key: "renderModal",
    value: function renderModal(type, options) {
      if (typeof this[type] !== 'function') {
        return false;
      }

      var wrapEle = this.createWrapEle();

      if (!wrapEle) {
        return false;
      } // 更改蒙层背景色


      wrapEle.style.background = 'rgba(0, 0, 0, 0.5)';

      _reactDom.default.render(this[type](options), wrapEle);
    }
  }, {
    key: "render",
    value: function render(type, content, duration, callback) {
      var _this2 = this;

      if (typeof this[type] !== 'function') {
        return false;
      }

      var wrapEle = this.createWrapEle();

      if (!wrapEle) {
        return false;
      } // 重置蒙层背景色


      wrapEle.style.background = 'transparent';

      _reactDom.default.render(this[type](content), wrapEle);

      var _duration = duration;

      if (type === 'renderLoading' && !Number(_duration)) {
        _duration = 10;
      } else {
        _duration = Number(_duration) || 3;
      }

      if (_duration !== 0) {
        setTimeout(function () {
          _this2.hide();

          if (callback) {
            callback();
          }
        }, _duration * 1000);
      }
    }
  }]);

  return App;
}(_react.Component)) || _class);
var _default = {
  loading: App.render.bind(App, 'renderLoading'),
  info: App.render.bind(App, 'renderInfo'),
  success: App.render.bind(App, 'renderSuccess'),
  remindModal: App.renderModal.bind(App, 'renderRemindModal'),
  hide: App.hide
};
exports.default = _default;